/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2016 Altera Corporation. All rights reserved.
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, the Altera Quartus Prime License Agreement,
the Altera MegaCore Function License Agreement, or other 
applicable license agreement, including, without limitation, 
that your use is for the sole purpose of programming logic 
devices manufactured by Altera and sold by Altera or its 
authorized distributors.  Please refer to the applicable 
agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("inputBinaryLevel")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 10;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("inputBinaryLevel[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inputBinaryLevel";
}

SIGNAL("inputBinaryLevel[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inputBinaryLevel";
}

SIGNAL("inputBinaryLevel[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inputBinaryLevel";
}

SIGNAL("inputBinaryLevel[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inputBinaryLevel";
}

SIGNAL("inputBinaryLevel[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inputBinaryLevel";
}

SIGNAL("inputBinaryLevel[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inputBinaryLevel";
}

SIGNAL("inputBinaryLevel[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inputBinaryLevel";
}

SIGNAL("inputBinaryLevel[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inputBinaryLevel";
}

SIGNAL("inputBinaryLevel[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inputBinaryLevel";
}

SIGNAL("inputBinaryLevel[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inputBinaryLevel";
}

SIGNAL("periodEnd")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("outputLED1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 7;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("outputLED1[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outputLED1";
}

SIGNAL("outputLED1[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outputLED1";
}

SIGNAL("outputLED1[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outputLED1";
}

SIGNAL("outputLED1[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outputLED1";
}

SIGNAL("outputLED1[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outputLED1";
}

SIGNAL("outputLED1[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outputLED1";
}

SIGNAL("outputLED1[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outputLED1";
}

SIGNAL("outputLED2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 7;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("outputLED2[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outputLED2";
}

SIGNAL("outputLED2[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outputLED2";
}

SIGNAL("outputLED2[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outputLED2";
}

SIGNAL("outputLED2[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outputLED2";
}

SIGNAL("outputLED2[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outputLED2";
}

SIGNAL("outputLED2[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outputLED2";
}

SIGNAL("outputLED2[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outputLED2";
}

SIGNAL("outputLED3")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 7;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("outputLED3[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outputLED3";
}

SIGNAL("outputLED3[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outputLED3";
}

SIGNAL("outputLED3[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outputLED3";
}

SIGNAL("outputLED3[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outputLED3";
}

SIGNAL("outputLED3[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outputLED3";
}

SIGNAL("outputLED3[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outputLED3";
}

SIGNAL("outputLED3[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outputLED3";
}

SIGNAL("outputLED4")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 7;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("outputLED4[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outputLED4";
}

SIGNAL("outputLED4[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outputLED4";
}

SIGNAL("outputLED4[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outputLED4";
}

SIGNAL("outputLED4[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outputLED4";
}

SIGNAL("outputLED4[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outputLED4";
}

SIGNAL("outputLED4[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outputLED4";
}

SIGNAL("outputLED4[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outputLED4";
}

SIGNAL("outputLED5")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 7;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("outputLED5[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outputLED5";
}

SIGNAL("outputLED5[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outputLED5";
}

SIGNAL("outputLED5[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outputLED5";
}

SIGNAL("outputLED5[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outputLED5";
}

SIGNAL("outputLED5[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outputLED5";
}

SIGNAL("outputLED5[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outputLED5";
}

SIGNAL("outputLED5[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outputLED5";
}

SIGNAL("outputLED6")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 7;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("outputLED6[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outputLED6";
}

SIGNAL("outputLED6[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outputLED6";
}

SIGNAL("outputLED6[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outputLED6";
}

SIGNAL("outputLED6[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outputLED6";
}

SIGNAL("outputLED6[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outputLED6";
}

SIGNAL("outputLED6[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outputLED6";
}

SIGNAL("outputLED6[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outputLED6";
}

TRANSITION_LIST("clk")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 1.0;
		}
	}
}

TRANSITION_LIST("inputBinaryLevel[9]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 140.0;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 620.0;
		}
	}
}

TRANSITION_LIST("inputBinaryLevel[8]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 140.0;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 620.0;
		}
	}
}

TRANSITION_LIST("inputBinaryLevel[7]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 140.0;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 620.0;
		}
	}
}

TRANSITION_LIST("inputBinaryLevel[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 140.0;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 620.0;
		}
	}
}

TRANSITION_LIST("inputBinaryLevel[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 140.0;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 620.0;
		}
	}
}

TRANSITION_LIST("inputBinaryLevel[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 140.0;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 620.0;
		}
	}
}

TRANSITION_LIST("inputBinaryLevel[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 140.0;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 620.0;
		}
	}
}

TRANSITION_LIST("inputBinaryLevel[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 140.0;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 620.0;
		}
	}
}

TRANSITION_LIST("inputBinaryLevel[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 140.0;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 620.0;
		}
	}
}

TRANSITION_LIST("inputBinaryLevel[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 140.0;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 620.0;
		}
	}
}

TRANSITION_LIST("periodEnd")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 99.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 96.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 96.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 96.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 96.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 96.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 96.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 96.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 96.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 79.0;
		}
	}
}

TRANSITION_LIST("outputLED1[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 198.0;
			LEVEL 0 FOR 204.0;
			LEVEL 1 FOR 595.0;
		}
	}
}

TRANSITION_LIST("outputLED1[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 198.0;
			LEVEL 0 FOR 204.0;
			LEVEL 1 FOR 595.0;
		}
	}
}

TRANSITION_LIST("outputLED1[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 198.0;
			LEVEL 0 FOR 204.0;
			LEVEL 1 FOR 595.0;
		}
	}
}

TRANSITION_LIST("outputLED1[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 198.0;
			LEVEL 0 FOR 204.0;
			LEVEL 1 FOR 595.0;
		}
	}
}

TRANSITION_LIST("outputLED1[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 198.0;
			LEVEL 0 FOR 204.0;
			LEVEL 1 FOR 595.0;
		}
	}
}

TRANSITION_LIST("outputLED1[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 198.0;
			LEVEL 0 FOR 204.0;
			LEVEL 1 FOR 595.0;
		}
	}
}

TRANSITION_LIST("outputLED1[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("outputLED2[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 198.0;
			LEVEL 0 FOR 204.0;
			LEVEL 1 FOR 595.0;
		}
	}
}

TRANSITION_LIST("outputLED2[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 198.0;
			LEVEL 0 FOR 204.0;
			LEVEL 1 FOR 595.0;
		}
	}
}

TRANSITION_LIST("outputLED2[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 198.0;
			LEVEL 0 FOR 204.0;
			LEVEL 1 FOR 595.0;
		}
	}
}

TRANSITION_LIST("outputLED2[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 198.0;
			LEVEL 0 FOR 204.0;
			LEVEL 1 FOR 595.0;
		}
	}
}

TRANSITION_LIST("outputLED2[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 198.0;
			LEVEL 0 FOR 204.0;
			LEVEL 1 FOR 595.0;
		}
	}
}

TRANSITION_LIST("outputLED2[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 198.0;
			LEVEL 0 FOR 204.0;
			LEVEL 1 FOR 595.0;
		}
	}
}

TRANSITION_LIST("outputLED2[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("outputLED3[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 997.0;
		}
	}
}

TRANSITION_LIST("outputLED3[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 198.0;
			LEVEL 0 FOR 204.0;
			LEVEL 1 FOR 595.0;
		}
	}
}

TRANSITION_LIST("outputLED3[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 198.0;
			LEVEL 0 FOR 204.0;
			LEVEL 1 FOR 595.0;
		}
	}
}

TRANSITION_LIST("outputLED3[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 997.0;
		}
	}
}

TRANSITION_LIST("outputLED3[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 997.0;
		}
	}
}

TRANSITION_LIST("outputLED3[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 997.0;
		}
	}
}

TRANSITION_LIST("outputLED3[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("outputLED4[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 198.0;
			LEVEL 0 FOR 204.0;
			LEVEL 1 FOR 595.0;
		}
	}
}

TRANSITION_LIST("outputLED4[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 198.0;
			LEVEL 0 FOR 204.0;
			LEVEL 1 FOR 595.0;
		}
	}
}

TRANSITION_LIST("outputLED4[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 198.0;
			LEVEL 0 FOR 204.0;
			LEVEL 1 FOR 595.0;
		}
	}
}

TRANSITION_LIST("outputLED4[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 198.0;
			LEVEL 0 FOR 204.0;
			LEVEL 1 FOR 595.0;
		}
	}
}

TRANSITION_LIST("outputLED4[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 198.0;
			LEVEL 0 FOR 204.0;
			LEVEL 1 FOR 595.0;
		}
	}
}

TRANSITION_LIST("outputLED4[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 198.0;
			LEVEL 0 FOR 204.0;
			LEVEL 1 FOR 595.0;
		}
	}
}

TRANSITION_LIST("outputLED4[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("outputLED5[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 198.0;
			LEVEL 0 FOR 204.0;
			LEVEL 1 FOR 595.0;
		}
	}
}

TRANSITION_LIST("outputLED5[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 198.0;
			LEVEL 0 FOR 204.0;
			LEVEL 1 FOR 595.0;
		}
	}
}

TRANSITION_LIST("outputLED5[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 997.0;
		}
	}
}

TRANSITION_LIST("outputLED5[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 198.0;
			LEVEL 0 FOR 204.0;
			LEVEL 1 FOR 595.0;
		}
	}
}

TRANSITION_LIST("outputLED5[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 198.0;
			LEVEL 0 FOR 204.0;
			LEVEL 1 FOR 595.0;
		}
	}
}

TRANSITION_LIST("outputLED5[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 997.0;
		}
	}
}

TRANSITION_LIST("outputLED5[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 201.0;
			LEVEL 0 FOR 204.0;
			LEVEL 1 FOR 595.0;
		}
	}
}

TRANSITION_LIST("outputLED6[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 198.0;
			LEVEL 0 FOR 204.0;
			LEVEL 1 FOR 595.0;
		}
	}
}

TRANSITION_LIST("outputLED6[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 198.0;
			LEVEL 0 FOR 204.0;
			LEVEL 1 FOR 595.0;
		}
	}
}

TRANSITION_LIST("outputLED6[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 198.0;
			LEVEL 0 FOR 204.0;
			LEVEL 1 FOR 595.0;
		}
	}
}

TRANSITION_LIST("outputLED6[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 198.0;
			LEVEL 0 FOR 204.0;
			LEVEL 1 FOR 595.0;
		}
	}
}

TRANSITION_LIST("outputLED6[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 997.0;
		}
	}
}

TRANSITION_LIST("outputLED6[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 997.0;
		}
	}
}

TRANSITION_LIST("outputLED6[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 201.0;
			LEVEL 0 FOR 204.0;
			LEVEL 1 FOR 595.0;
		}
	}
}

DISPLAY_LINE
{
	CHANNEL = "clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "inputBinaryLevel";
	EXPAND_STATUS = EXPANDED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
	CHILDREN = 2, 3, 4, 5, 6, 7, 8, 9, 10, 11;
}

DISPLAY_LINE
{
	CHANNEL = "inputBinaryLevel[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "inputBinaryLevel[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "inputBinaryLevel[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "inputBinaryLevel[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "inputBinaryLevel[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "inputBinaryLevel[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "inputBinaryLevel[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "inputBinaryLevel[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "inputBinaryLevel[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "inputBinaryLevel[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "periodEnd";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 12;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "outputLED1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 13;
	TREE_LEVEL = 0;
	CHILDREN = 14, 15, 16, 17, 18, 19, 20;
}

DISPLAY_LINE
{
	CHANNEL = "outputLED1[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "outputLED1[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "outputLED1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "outputLED1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "outputLED1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "outputLED1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "outputLED1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "outputLED2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 21;
	TREE_LEVEL = 0;
	CHILDREN = 22, 23, 24, 25, 26, 27, 28;
}

DISPLAY_LINE
{
	CHANNEL = "outputLED2[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "outputLED2[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "outputLED2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "outputLED2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "outputLED2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "outputLED2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "outputLED2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "outputLED3";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 29;
	TREE_LEVEL = 0;
	CHILDREN = 30, 31, 32, 33, 34, 35, 36;
}

DISPLAY_LINE
{
	CHANNEL = "outputLED3[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "outputLED3[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "outputLED3[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "outputLED3[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "outputLED3[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "outputLED3[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "outputLED3[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "outputLED4";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 37;
	TREE_LEVEL = 0;
	CHILDREN = 38, 39, 40, 41, 42, 43, 44;
}

DISPLAY_LINE
{
	CHANNEL = "outputLED4[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 37;
}

DISPLAY_LINE
{
	CHANNEL = "outputLED4[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 37;
}

DISPLAY_LINE
{
	CHANNEL = "outputLED4[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 37;
}

DISPLAY_LINE
{
	CHANNEL = "outputLED4[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 37;
}

DISPLAY_LINE
{
	CHANNEL = "outputLED4[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 37;
}

DISPLAY_LINE
{
	CHANNEL = "outputLED4[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 37;
}

DISPLAY_LINE
{
	CHANNEL = "outputLED4[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 37;
}

DISPLAY_LINE
{
	CHANNEL = "outputLED5";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 45;
	TREE_LEVEL = 0;
	CHILDREN = 46, 47, 48, 49, 50, 51, 52;
}

DISPLAY_LINE
{
	CHANNEL = "outputLED5[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 46;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "outputLED5[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 47;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "outputLED5[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 48;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "outputLED5[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 49;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "outputLED5[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 50;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "outputLED5[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 51;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "outputLED5[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 52;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "outputLED6";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 53;
	TREE_LEVEL = 0;
	CHILDREN = 54, 55, 56, 57, 58, 59, 60;
}

DISPLAY_LINE
{
	CHANNEL = "outputLED6[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 54;
	TREE_LEVEL = 1;
	PARENT = 53;
}

DISPLAY_LINE
{
	CHANNEL = "outputLED6[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 55;
	TREE_LEVEL = 1;
	PARENT = 53;
}

DISPLAY_LINE
{
	CHANNEL = "outputLED6[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 56;
	TREE_LEVEL = 1;
	PARENT = 53;
}

DISPLAY_LINE
{
	CHANNEL = "outputLED6[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 57;
	TREE_LEVEL = 1;
	PARENT = 53;
}

DISPLAY_LINE
{
	CHANNEL = "outputLED6[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 58;
	TREE_LEVEL = 1;
	PARENT = 53;
}

DISPLAY_LINE
{
	CHANNEL = "outputLED6[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 59;
	TREE_LEVEL = 1;
	PARENT = 53;
}

DISPLAY_LINE
{
	CHANNEL = "outputLED6[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 60;
	TREE_LEVEL = 1;
	PARENT = 53;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
